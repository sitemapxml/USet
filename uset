#!/bin/bash

#############################################
# https://github.com/sitemapxml/USet        #
# Author: Виктор Павловић                   #
#         https://github.com/sitemapxml     #
# License: MIT                              #
# Publish date: Aug 2, 2020.                #
# Version: 1.0.0                            #
#############################################

# NOTE: This script is made from two repositories: https://github.com/sitemapxml/lamp and https://github.com/sitemapxml/lemp (LAMP and LEMP)
# which were put into one repository called uset_alfa (https://github.com/sitemapxml/uset_alfa), from which is this project created.
# Version 1.3.2 of LAMP script is used as beginning version of USet script, so LAMP repository is not under active development anymore, but it will
# remain public for better understanding of USet script.

# Definicije boja
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLACK='\e[30m'
WHITE='\e[97m'

# Reset boja teksta
NC='\033[0m'

# Boja pozadine
BGREEN='\e[42m'
BGRAY='\e[47m'

# Reset boje pozadine
BNC='\e[49m'

# Davanje privilegija za pokretanje ostalim skriptama
chmod +x files/mksite files/uninstall

# Poruka dobrodošlice!
text=''
text+="${GREEN}"
text+="┌──────────────────────────────────────────────────────┐\n"
text+="│ Dobro došli u LAMP skriptu za instalaciju!           │\n"
text+="│ Sledeći programi će biti instalirani:                │\n"
text+="│    - apache2 http server                             │\n"
text+="│    - mysql - 5.6 ili 8.0 (zavisi od verzije OS-a)    │\n"
text+="│    - php - 7.2 ili 7.4 (zavisi od verzije OS-a)      │\n"
text+="│ PHP ekstenzije:                                      │\n"
text+="│    php-zip php-mysql php-mbstring php-curl           │\n"
text+="│    php-gd php-xml php-xmlrpc php-soap php-intl       │\n"
text+="│ Kontrolna tabla:                                     │\n"
text+="│    Webmin - poslednja verzija                        │\n"
text+="│ Dodatna podešavanja php-a:                           │\n"
text+="│    post_max_size = 280M                              │\n"
text+="│    upload_max_filesize = 256M                        │\n"
text+="│ NAPOMENE:                                            │\n"
text+="│    Biće napravljen virtualhost fajl sa osnovnim      │\n"
text+="│ podešavanjima domena. U toku instalacije imaćete     │\n"
text+="│ mogućnost da odaberete instalaciju Wordpress-a       │\n"
text+="│ u suprotnom biće kreiran probni index.html           │\n"
text+="│ i info.php fajl za proveru ispravnosti instalacije.  │\n"
text+="│                                                      │\n"
text+="│ Za više informacija posetite:                        │\n"
text+="│ https://github.com/sitemapxml/lamp                   │\n"
text+="└──────────────────────────────────────────────────────┘\n"
text+="${NC}"
printf "%b" "$text"

# Unos neophodnih podataka
echo -e ${YELLOW}'Molimo vas da unesete osnovne podatke o infra-strukturi: '${NC}
echo

echo -e ${YELLOW}'Korak (1/6)'${NC}
while true; do
    read -p 'Unesite naziv domena bez protokola (bez http://): ' hostname
	hostname=${hostname:-default}
    read -p 'Unesite ponovo da bi ste potvrdili: ' hostname2
    [ "$hostname" = "$hostname2" ] && break
    echo -e ${RED}'Molimo pokušajte ponovo.'${NC}
done

echo -e ${YELLOW}'Korak (2/6)'${NC}
while true; do
    read -s -p 'Unesite lozinku root korisnika: ' rootpass
	rootpass=${rootpass:-default}
	echo
    read -s -p 'Unesite ponovo da bi ste potvrdili: ' rootpass2
	echo
    [ "$rootpass" = "$rootpass2" ] && break
    echo -e ${RED}'Molimo pokušajte ponovo.'${NC}
	echo
done

echo
echo -e ${YELLOW}'Korak (3/6)'${NC}
read -p 'Unesite korisničko ime UNIX korisnika: ' unixuser
unixuser=${unixuser:-default}

echo -e ${YELLOW}'Korak (4/6)'${NC}
while true; do
    read -s -p 'Unesite lozinku UNIX korisnika: ' unixpass
	unixpass=${unixpass:-default}
	echo
    read -s -p 'Unesite ponovo da bi ste potvrdili: ' unixpass2
	echo
    [ "$unixpass" = "$unixpass2" ] && break
    echo -e ${RED}'Molimo pokušajte ponovo.'${NC}
	echo
done

echo
echo -e ${YELLOW}'Korak (5/6)'${NC}
echo -e ${YELLOW}'Podešavanje lozinke za MYSQL root korisnika'${NC}
while true; do
    read -s -p 'Unesite lozinku za MYSQL root: ' mysqlrpass
	mysqlrpass=${mysqlrpass:-default}
	echo
    read -s -p 'Unesite ponovo da bi ste potvrdili: ' mysqlrpass2
	echo
    [ "$mysqlrpass" = "$mysqlrpass2" ] && break
    echo -e ${RED}'Molimo pokušajte ponovo.'${NC}
	echo
done

echo
echo -e ${YELLOW}'Korak (6/6)'${NC}
echo -e ${YELLOW}'Podešavanje Email adrese administratora'${NC}
while true; do
    read -p 'Unesite vašu Email adresu: ' email
    read -p 'Unesite ponovo da bi ste potvrdili: ' email2
    [ "$email" = "$email2" ] && email=${email:-webmaster@example.com} && break
    echo -e ${RED}'Molimo pokušajte ponovo.'${NC}
	echo
done

# Početak instalacije
echo
echo -e ${YELLOW}'Neophodne informacije su prikupljene. Instalacija može da počne.'${NC}
read -p $'\033[1;33mPritisnite [Enter] da bi ste nastavili...\033[0m'
echo 'Krećemo...'
sleep 1s

# Ažuriranje liste repozitorija, nadogradnja se preporučuje na kraju
echo -e ${YELLOW}'Ažuriranje liste repozitorija...'${NC}
sleep 1s
apt-get update

# Dodavanje main repozitorije za slučaj da nije dodata, dodavanje universe repozitorije
echo -e ${YELLOW}'Dodavanje repozitorija...'${NC}
add-apt-repository main
# add-apt-repository universe
apt-get update

# Instalacija software-properties-common za slučaj da nije instalirano
apt-get install software-properties-common apt-transport-https -y

# Instalacija php i mysql, php ekstenzije, sitni pomoćni programi zip, unzip i tree
echo -e ${YELLOW}'Instalira se apache2, php i mysql'${NC}
sleep 1s
apt-get install apache2 php mysql-server -y
echo -e ${YELLOW}'Instaliranje php ekstenzija...'${NC}
sleep 1s
apt-get install php-zip php-mysql php-curl php-mbstring php-bcmath php-gd php-xml php-json php-soap php-intl -y
systemctl enable mysql apache2
apt-get install zip unzip tree locate net-tools -y

# Uveri se da je instaliran awk
apt-get gawk mawk -y

# Provera verzije php-a
php_version=$( php -r 'echo phpversion();' | head -c 3 )

# Osnovna podešavanja php-a, ServerTokens
echo -e ${YELLOW}'Konfigurisanje php-a...'${NC}
sleep 1s
sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/$php_version/apache2/php.ini
sed -i 's/post_max_size = 8M/post_max_size = 280M/g' /etc/php/$php_version/apache2/php.ini
sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 256M/g' /etc/php/$php_version/apache2/php.ini
sed -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/apache2/conf-available/security.conf
systemctl restart apache2

# Podešavanje hostname-a prema unetom domenu
hostnamectl set-hostname $hostname

# Webmin instalacija
echo -e ${YELLOW}'Instaliranje Webmin kontrolne table...'${NC}
sleep 1s
echo "deb http://download.webmin.com/download/repository sarge contrib" >> /etc/apt/sources.list
apt-key add files/resources/jcameron-key.asc
apt-get update
apt-get --yes install webmin
sed -i 's/port=10000/port=3000/g' /etc/webmin/miniserv.conf
/etc/init.d/webmin restart

# Podešavanje veb servera
echo -e ${YELLOW}'Konfigurisanje Apache servera...'${NC}
sleep 1s
rm -rf /var/www/html
mkdir /var/www/$hostname
cp files/resources/vhost.conf /etc/apache2/sites-available/$hostname.conf
sed -i "s/sn_default/$hostname/g" /etc/apache2/sites-available/$hostname.conf
sed -i "s/dir_default/$hostname/g" /etc/apache2/sites-available/$hostname.conf
a2dissite 000-default
rm /etc/apache2/sites-available/000-default.conf
a2ensite $hostname
a2enmod rewrite
systemctl restart apache2

# Dodavanje UNIX korisnika
echo -e ${YELLOW}'Dodavanje UNIX korisnika...'${NC}
sleep 1s
adduser $unixuser --gecos "First Last,RoomNumber,WorkPhone,HomePhone" --disabled-password
echo -e "$unixuser:$unixpass" | chpasswd
echo "$unixuser ALL=(ALL:ALL) ALL" | EDITOR='tee -a' visudo
echo -e ${GREEN}"Korisnik $unixuser je kreiran."${NC}

# Postavljanje nove root lozinke
echo -e ${YELLOW}'Postavljanje nove lozinke za root...'${NC}
sleep 1s
echo -e "root:$rootpass" | chpasswd
echo -e ${GREEN}'Lozinka je ažurirana!'${NC}

# Kreiranje direktorijuma za skladištenje lozinki
mkdir .podaci
chmod 0000 -R .podaci

# Instalacija SSL sertifikata
while true
	do
	echo -e ${YELLOW}'Korak (1/5)'${NC}
	read -p 'Da li želite da instalirate SSL sertifikat? (Da/Ne): ' ssl_install
		case $ssl_install in
		[dD][aA]|[dD])
			echo 'Instalira se SSL...'
			sleep 1s
			# Certbot instalacija
			apt-get install python3-certbot-apache -y

			# Instalacija Let's encrypt SSL sertifikata
			certbot --apache --non-interactive --agree-tos --domains $hostname --email $email

      CERTFILE="/etc/letsencrypt/live/$hostname/fullchain.pem"
      KEYFILE="/etc/letsencrypt/live/$hostname/privkey.pem"
      if [ -f "$CERTFILE" ] && [ -f "$KEYFILE" ]; then
        # Podesavanje SSL-a za Webmin
        echo -e ${YELLOW}'Podesavanje SSL-a za Webmin...'${NC}
        sed -i '/keyfile/d' /etc/webmin/miniserv.conf
        echo -e 'keyfile=''/''etc''/''letsencrypt''/''live''/'"$hostname"'/''privkey.pem' >> /etc/webmin/miniserv.conf
        echo -e 'certfile=''/''etc''/''letsencrypt''/''live''/'"$hostname"'/''fullchain.pem' >> /etc/webmin/miniserv.conf
        /etc/init.d/webmin restart

        # Putanje do instaliranih SSL sertifikata
        echo -e '\nPodaci o SSL sertifikatima:' > .podaci/ssl-info.txt
        certbot certificates >> .podaci/ssl-info.txt
        chmod 0000 .podaci/ssl-info.txt
        echo -e ${GREEN}'SSL je instaliran!'${NC}
      else
        echo -e ${RED}'SSL sertifikat nije ispravno instaliran! Proverite greške i pokušajte ponovo.'${NC}
        ssl_error='1'
        sleep 1s
        echo '==================================================================' >> .podaci/ssl-info.txt
        echo '============ SSL sertifikat nije ispravno instaliran! ============' >> .podaci/ssl-info.txt
        echo '============== Proverite greške i pokušajte ponovo. ==============' >> .podaci/ssl-info.txt
        echo '==================================================================' >> .podaci/ssl-info.txt
      fi
		break
		;;
		[nN][eE]|[nN])
	break
	;;
	*)
		echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
	;;
	esac
done

# Određivanje protokola
case $ssl_install in
	[dD][aA]|[dD])
		https='true'
	;;
	[nN][eE]|[nN])
		https='false'
	;;
esac

if [ -f "$CERTFILE" ] && [ -f "$KEYFILE" ] && [ "$https" == "true" ]; then
    protocol='https://'
    ssl_installed='true'
else
    protocol='http://'
    ssl_installed='false'
fi

url="$protocol$hostname"

# Provera verzije mysql servera
mysqld_version=$( mysqld -V | awk '{print $3}' | head -c 1 )

# Instalacija Wordpress-a
while true
	do
	echo -e ${YELLOW}'Korak (2/5)'${NC}
	read -p 'Da li želite da instalirate Wordpress? (Da/Ne): ' wp_install
		case $wp_install in
		[dD][aA]|[dD])
			# Instaliranje faljova
			wget https://sr.wordpress.org/latest-sr_RS.tar.gz
			tar -xzvf latest-sr_RS.tar.gz
			mv wordpress /var/www/$hostname/html
			chown www-data:www-data -R /var/www/$hostname/html

			# Instaliranje dodatnih php ekstenzija
			apt-get install php-xmlrpc php-exif -y
			systemctl restart apache2

			# Brisanje nepotrebnih fajlova
			rm latest-sr_RS.tar.gz

			# Kreiranje baze podataka
			echo 'Kreiranje baze podataka...'
			sleep 1s

      database_password=$( date +%s | sha256sum | base64 | head -c 32 )
			db_name=$( echo $hostname | sed 's/\./_/g' )

      if [ "$mysqld_version" -ge "8" ]; then
        mysql -u root -e "CREATE DATABASE $db_name DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci; CREATE USER '$unixuser'@'%' IDENTIFIED BY '$database_password'; GRANT ALL PRIVILEGES ON *.* TO '$unixuser'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;"
      else
        mysql -u root -e "CREATE DATABASE $db_name DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci; CREATE USER $unixuser@localhost identified by '$database_password'; GRANT ALL ON $db_name.* to $unixuser@localhost WITH GRANT OPTION; FLUSH PRIVILEGES;"
      fi

			echo '==================================================================' > db-info.txt
			echo '============= Pristupni parametri za bazu podataka ===============' >> db-info.txt
			echo '==================================================================' >> db-info.txt
			echo -e '\n\n''Naziv baze podataka:' $db_name'\nKorisničko ime:' $unixuser'\nLozinka:' $database_password'\n' >> db-info.txt

			# Konfigurisanje Wordpress Multisite instalacije
				while true
					do
					read -p 'Da li želite da omogućite Wordpress Multisite? (Da/Ne): ' wp_install_multisite
						case $wp_install_multisite in
						[dD][aA]|[dD])
							# Instaliranje faljova
							echo 'Konfiguriše se Multisite...'
							sed -i "81i define( 'WP_ALLOW_MULTISITE', true );" /var/www/$hostname/html/wp-config-sample.php
							echo -e ${GREEN}'Multisite je podešen!'${NC}
						break
						;;
					[nN][eE]|[nN])
						break
						;;
						*)
							echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
						;;
					esac
				done
			echo -e ${GREEN}'Wordpress je instaliran!'${NC}
		break
		;;
		[nN][eE]|[nN])
			# Iskopiraj index.html u webroot
			mkdir /var/www/$hostname/html
			cp files/resources/index.html /var/www/$hostname/html/index.html
			echo "<?php phpinfo(); ?>" > /var/www/$hostname/html/info.php
			sed -i "s/s_title/Domen $hostname je uspešno podešen\!/g" /var/www/$hostname/html/index.html
      sed -i "s/webmin_hostname/$hostname/g" /var/www/$hostname/html/index.html

			echo 'Podešeni su index.html i phpinfo fajl.'
		break
		;;
	*)
		echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
	;;
	esac
done

# 6g zaštitni zid
while true
	do
	echo -e ${YELLOW}'Korak (3/5)'${NC}
	read -p 'Da li želite da omogućite Apache 6G zaštitni zid? (Da/Ne): ' apache_firewall
		case $apache_firewall in
		[dD][aA]|[dD])
			cp files/resources/6g.conf /etc/apache2/6g.conf
			sed -i "s/#6g //g" /etc/apache2/sites-available/$hostname.conf
			systemctl restart apache2
			echo -e ${GREEN}'Zaštitni zid je omogućen!'${NC}
		break
		;;
		[nN][eE]|[nN])
	break
	;;
	*)
		echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
	;;
	esac
done

# UFW zaštitni zid
while true
	do
	echo -e ${YELLOW}'Korak (4/5)'${NC}
	read -p 'Da li želite da omogućite zaštitu portova? (Da/Ne): ' ufw_firewall
		case $ufw_firewall in
		[dD][aA]|[dD])
			ufw --force enable
			ufw allow 'OpenSSH'
			ufw allow 'Apache Full'
			ufw allow '3000/tcp'
			ufw reload
			echo -e ${GREEN}'Zaštita portova je omogućena!'${NC}
		break
		;;
		[nN][eE]|[nN])
	break
	;;
	*)
		echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
	;;
	esac
done

# Kreiranje fajla sa lozinkama
while true
	do
	echo -e ${YELLOW}'Korak (5/5)'${NC}
	read -r -p 'Da li želite da napravite rezervnu kopiju korisničkih imena i lozinki? (Da/Ne): ' backup_file
		case $backup_file in
		[dD][aA]|[dD])
		while true
			do
			echo -e ${RED}'Ova opcija nije bezbedna. Savetujemo vam da fajl iskopirate na sigurno mesto i da ga u što kraćem roku obrišete sa servera.'${NC}
			read -p 'Da li ste sigurni da želite da nastavite? (Da/Ne): ' backup_file_confirm
				case $backup_file_confirm in
				[dD][aA]|[dD])
					echo 'Kopiranje lozinki...'
					sleep 1s
					echo '*************************************************************************************' > .podaci/podaci.txt
					echo '******************************** Pristupni parametri ********************************' >> .podaci/podaci.txt
					echo '*************************************************************************************' >> .podaci/podaci.txt

					echo -e '\n\nHostname: '"$hostname"'\nroot lozinka: '"$rootpass"'\n\nUNIX korisnik: '"$unixuser"'\nUNIX lozinka: '"$unixpass"'\n' >> .podaci/podaci.txt
					echo -e 'MYSQL root lozinka: '"$mysqlrpass"'\n\nE-mail: '"$email"'\n\n' >> .podaci/podaci.txt

					echo '*************************************************************************************' >> .podaci/podaci.txt
					echo 'VAŽNA NAPOMENA:' >> .podaci/podaci.txt
					echo 'U OVOM FAJLU SE NALAZE INFORMACIJE KOJE KOGU UGROZITI BEZBEDNOST SERVERA I SVIH' >> .podaci/podaci.txt
					echo 'APLIKACIJA NA NJEMU. PREPORUČUJE SE DA LOZINKE SAČUVATE NA SIGURNOM MESTU I DA OVAJ' >> .podaci/podaci.txt
					echo 'FAJL OBRIŠETE ŠTO PRE. PREPORUČUJE SE KORIŠĆENJE "PASSWORD MANAGER-A".' >> .podaci/podaci.txt
					echo '*************************************************************************************' >> .podaci/podaci.txt
					chmod 0000 .podaci/podaci.txt
					echo -e ${GREEN}'Lozinke su iskopirane.'${NC}
				break
				;;
				[nN][eE]|[nN])
				break
				;;
			*)
				echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
			;;
			esac
		done
		break
		;;
		[nN][eE]|[nN])
		break
		;;
	*)
		echo -e ${RED}'Molimo vas da odgovorite sa Da ili Ne.'${NC}
	;;
	esac
done

# Echo poruke
echo -e ${BLACK}${BGREEN}'Instalacija je završena!'${NC}${BNC}
echo

if [ "$ssl_error" = "1" ]; then
  echo -e ${RED}'Konfigurisanje SSL sertifikata nije uspelo.'${NC}
  echo 'Proverite DNS podešavanja i pokušajte da instalirate SSL komandom:'
  echo -e ${WHITE}'certbot --apache'${NC}
fi

echo -e "Vaš sajt je podešen na adresi: ${GREEN}$url"${NC}

case $wp_install in
	[dD][aA]|[dD])
    echo "Da dovršite instalaciju Wordpress-a posetite početnu stranu vašeg veb sajta"
    echo "i iskopirajte podatke iz fajla db-info.txt u odgovarajuća polja."
    echo -e "Fajl možete otvoriti komandom:\n${WHITE}nano db-info.txt"${NC}
	;;
	[nN][eE]|[nN])
		echo -e "Ispravnost php-a možete proveriti otvaranjem stranice ${GREEN}$url/info.php"${NC}
	;;
esac

echo
echo -e "Webmin kontrolna tabla je instalirana na adresi: ${GREEN}$url:3000"${NC}
echo -e "Za pristup Webmin kontrolnoj tabli možete koristiti korisničko ime ${GREEN}$unixuser"${NC}
echo -e "i lozinku koju ste kreirali u toku instalacije"
echo
echo 'Webroot servera je:'
echo -e '/var/www/'"${GREEN}$hostname${NC}"'/html'
echo

case $backup_file_confirm in
	[dD][aA]|[dD])
    echo -e "Za pregled podataka o instalaciji možete da iskopirate komandu:"
    echo -e ${WHITE}"nano .podaci/podaci.txt"${NC}
    echo
	;;
	[nN][eE]|[nN])
	;;
esac

case $ssl_install in
	[dD][aA]|[dD])
    echo -e "Za prijem obaveštenja o isteku SSL sertifikata koristiće se e-mail adresa:\n${GREEN}$email"${NC}
    echo
	;;
	[nN][eE]|[nN])
    echo -e "Vaša e-mail adresa je ${GREEN}$email"${NC}
	;;
esac

# Brisanje bash i mysql istorije
cat /dev/null > ~/.bash_history && history -c
cat /dev/null > ~/.mysql_history
