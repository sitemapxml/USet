#!/bin/bash

#############################################
# https://github.com/sitemapxml/USet        #
# Author: Виктор Павловић                   #
#         https://github.com/sitemapxml     #
# License: MIT                              #
# Publish date: Aug 2, 2020.                #
# Version: 2.4.0                            #
#############################################

# Load configuration and libraries
source 'config.txt'
source 'libraries/args.sh'

# Read arguments
if [ "$#" = 0 ]; then
  echo "Running script in interactive mode..."
  sleep 1s
else
  source 'includes/arglist.inc.sh'
fi

# Load definied language and if file does not exist revert to en.txt
[ -f "languages/$conf_language.txt" ] && source "languages/$conf_language.txt" || source 'languages/en.txt'
[ -f "languages/welcome/$conf_language.txt" ] && source "languages/welcome/$conf_language.txt" || source 'languages/welcome/en.txt'
[ -f "languages/help/$conf_language.txt" ] && source "languages/help/$conf_language.txt" || source 'languages/help/en.txt'

# Load functions
source 'includes/functions.inc.sh'
source 'includes/input.inc.sh'
source 'includes/install.inc.sh'

case "$1" in
  -h) printf "$lang_help" && exit 0 ;;
  --help) printf "$lang_help" && exit 0 ;;
  -v) printf "USet version 3.0.0\n" && exit 0 ;;
  --version) printf "USet version 3.0.0\n" && exit 0 ;;
esac

# Turn output text coloring On or Off
[ "$conf_disable_colors" = "true" ] && fn_output_coloring_off || fn_output_coloring_on

# Gives execute rights to uninstall script
chmod +x 'tools/uninstall'

[ $UID -ne 0 ] && echo "This script must be run as root." && exit 1

# Show welcome screen
[ ! "$conf_skip_welcome_screen" = "true" ] && whiptail --title "USet" --scrolltext --msgbox "$lang_welcome" 20 65

# Input data
[ -n "$hostname" ] && printf "hostname already set to ${YELLOW}$hostname${NC}, skipping user input...\n" || fn_input_hostname
[ -n "$rootpass" ] && printf "rootpass already set, skipping user input...\n" || fn_input_rootpass
[ -n "$unixuser" ] && printf "unixuser already set to ${YELLOW}$unixuser${NC}, skipping user input...\n" || fn_input_unixuser
[ -n "$unixpass" ] && printf "unixpass already set, skipping user input...\n" || fn_input_unixpass
[ -n "$mysqlrpass" ] && printf "mysqlrpass already set, skipping user input...\n" || fn_input_mysqlrpass
[ -n "$email" ] && printf "email already set to ${YELLOW}$email${NC}, skipping user input...\n" || fn_input_email
[ -n "$web_server" ] && printf "web_server already set to ${YELLOW}$web_server${NC}, skipping user input...\n" || fn_input_server_type

# Main installation process
[ "$skip_interaction" != 'true' ] && fn_install_continue_msg && fn_update
[ "$conf_add_apt_repository_universe" = 'true' ] && fn_enable_universe
[ "$web_server" = 'apache' ] && fn_install_apache
[ "$web_server" ! = 'apache' ] && fn_install_nginx
fn_check_php_version && fn_enable_fpm
fn_install_mysql && fn_mysql_check_version
[ "$conf_install_imagemagick" = 'true' ] && fn_install_imagick
[ "$conf_php_modify_default" = 'true' ] && fn_php_modify_default
[ "$conf_webmin_install" = 'true' ] && fn_install_webmin
[ "$web_server" = "apache" ] && fn_configure_apache
[ "$web_server" = "nginx" ] && fn_configure_nginx
[ "$conf_create_index_html" = "true" ] && fn_create_index
[ "$conf_create_info_php" = 'true' ] && fn_create_info

fn_add_user
fn_set_rootpass
fn_set_mysql_rootpass

# Install SSL Certificate
fn_install_ssl

# Install Adminer, enable UFW and create password backup file
[ "$conf_install_adminer" = 'true' ] && fn_install_adminer
[ "$conf_enable_ufw" = 'true' ] && fn_enable_ufw
[ "$conf_create_pass_backup" = 'true' ] && fn_create_pass_backup

# Show post-installation message and delete history
fn_msg_completed | fn_write_log $conf_logname
fn_delete_history
