#!/bin/bash

#############################################
# https://github.com/sitemapxml/USet        #
# Author: Виктор Павловић                   #
#         https://github.com/sitemapxml     #
# License: MIT                              #
# Publish date: Aug 2, 2020.                #
# Version: 2.4.0                            #
#############################################

# Load configuration
source config.txt

# Load libraries
source "./libraries/args.sh"

# Read arguments
if [ "$#" = 0 ]; then
  echo "Running script in interactive mode..."
  sleep 1s
else
  source "./includes/arglist.inc.sh"
fi

# Load definied language and if file does not exist revert to en.txt
path_to_languages='./languages/'
path_to_welcome='./languages/welcome/'
if [ -f "${path_to_languages}$conf_language.txt" ]; then
  source ${path_to_languages}$conf_language.txt
else
  source ${path_to_languages}en.txt
fi
if [ -f "${path_to_welcome}$conf_language.txt" ]; then
  source ${path_to_welcome}$conf_language.txt
else
  source ${path_to_welcome}en.txt
fi

# Load functions
source "./includes/functions.inc.sh"
source "./includes/input.inc.sh"
source "./includes/install.inc.sh"

# Turn output text coloring On or Off
if [ "$conf_disable_colors" = "true" ]; then
  fn_output_coloring_off
else
  fn_output_coloring_on
fi

# Gives execute rights to uninstall script
chmod +x ./tools/uninstall

if [ "$conf_skip_welcome_screen" = "true" ]; then
  echo
else
  # Welcome screen!
  whiptail --title "USet" --scrolltext --msgbox "$lang_welcome" 20 65 || echo "$lang_welcome"
fi

# Input data
[ -n "$hostname" ] && printf "hostname already set to ${YELLOW}$hostname${NC}, skipping user input...\n" || fn_input_hostname
[ -n "$rootpass" ] && printf "rootpass already set, skipping user input...\n" || fn_input_rootpass
[ -n "$unixuser" ] && printf "unixuser already set to ${YELLOW}$unixuser${NC}, skipping user input...\n" || fn_input_unixuser
[ -n "$unixpass" ] && printf "unixpass already set, skipping user input...\n" || fn_input_unixpass
[ -n "$mysqlrpass" ] && printf "mysqlrpass already set, skipping user input...\n" || fn_input_mysqlrpass
[ -n "$email" ] && printf "email already set to ${YELLOW}$email${NC}, skipping user input...\n" || fn_input_email
[ -n "$web_server" ] && printf "web_server already set to ${YELLOW}$web_server${NC}, skipping user input...\n" || fn_input_server_type

# Main installation process
fn_install

# Install SSL Certificate
fn_install_ssl


# Chosen protocol
case $ssl_install in
	[Yy][Ee][Ss]|[Yy])
		https='true'
	;;
	[Nn][Oo]|[Nn])
		https='false'
	;;
esac

if [ -f "$CERTFILE" ] && [ -f "$KEYFILE" ] && [ "$https" == "true" ]; then
    protocol='https://'
    ssl_installed='true'
else
    protocol='http://'
    ssl_installed='false'
fi

url="$protocol$hostname"

# Check mysql server version
mysqld_version=$( mysqld -V | awk '{print $3}' | head -c 1 )

# Preparing database user name and password
database_password=$( date +%s | sha256sum | base64 | head -c 32 )
db_name=$( echo $hostname | sed 's/\./_/g' )

# Installing Adminer
fn_install_adminer

if [ "$web_server" = "apache" ]; then
  if [ "$conf_apache_firewall" = '6g' ]; then
    fn_install_6g
  elif [ "$conf_apache_firewall" = '7g' ]; then
    fn_install_7g
  else
    echo "Skipping .htaccess firewall rules..."
  fi
fi

# UFW firewall
[ "$conf_enable_ufw" = 'true' ] && fn_enable_ufw

# Creating password backup file
[ "$conf_create_pass_backup" = 'true' ] && fn_create_pass_backup


# Post-installation messages
echo -e ${BLACK}${BGREEN}"$lang_installation_is_done"${NC}${BNC}
echo

if [ "$ssl_error" = "1" ]; then
  echo -e "${RED}$lang_configuring_ssl_failed${NC}"
  echo -e "$lang_check_dns_settings_and_try_again"
  echo -e "${WHITE}certbot --$web_server${NC}"
fi

echo -e "$lang_website_available_at_address ${GREEN}$url${NC}"
echo -e "$lang_chosen_webserver_is ${GREEN}$web_server${NC}"
echo -e "$lang_you_can_check_if_php_working ${GREEN}$url/info.php${NC}"

echo
echo -e "$lang_webmin_installed_at_address ${GREEN}$url:$conf_webmin_port${NC}"
echo -e "$lang_to_access_webmin_you_can_use_username ${GREEN}$unixuser${NC}"
echo -e "$lang_and_password_created_during_installation"
echo
echo -e "$lang_server_webroot_is"
echo -e "/var/www/${GREEN}$hostname${NC}/html"
echo

case $backup_file_confirm in
	[Yy][Ee][Ss]|[Yy])
    echo -e "$lang_to_see_installation_data_copy_following_command"
    echo -e ${WHITE}"nano" $conf_data_folder_name"/"$conf_data_file_name${NC}
    echo
	;;
	[Nn][Oo]|[Nn])
	;;
esac

case $ssl_install in
	[Yy][Ee][Ss]|[Yy])
    echo -e "$lang_following_email_will_be_used_for_receiving_ssl_warnings:\n${GREEN}$email${NC}"
    echo
	;;
	[Nn][Oo]|[Nn])
    echo -e "$lang_your_email_address_is ${GREEN}$email${NC}"
	;;
esac

# Deleting bash and mysql history
cat /dev/null > ~/.mysql_history
cat /dev/null > ~/.bash_history && history -c
